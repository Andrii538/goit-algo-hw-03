import re

def normalize_phone(phone_number: str) -> str:
    """
    Очищує телефонний номер і повертає стандартизований номер у форматі +380XXXXXXXXX.\n
    Аргумент:
    phone_number (str): рядок, що містить не стандартизований телефонний номер.\n
    Повертає:
    str: рядок, що містить очищений і стандартизований телефонний номер.
    """
    # docstring опис роботи функції
    cleaned_num = re.sub(r'[^0-9+]', '', phone_number)  # Видаляємо всі нецифрові символи, крім знака +
    
    if cleaned_num[:2] == '38':     # Перевіряємо, чи номер починається з 38
        return '+' + cleaned_num    # Додаємо + і виводимо результат
    elif cleaned_num[:3] == '+38':  # Перевіряємо, чи номер починається з +38
        return cleaned_num          # Виводимо результат
    elif cleaned_num[0] == '0':     # Перевіряємо, чи номер починається з 0
        return '+38' + cleaned_num  # Додаємо +38 і виводимо результат
    elif cleaned_num[0] == '8':     # Перевіряємо, чи номер починається з 8
        return '+3' + cleaned_num   # Додаємо +3 і виводимо результат
    else:
        return "Некоректний номер"  # Якщо формат не співпадає з попередніми перевірками


raw_numbers = [
    "067\\t123 4567",
    "(095) 234-5678\\n",
    "+380 44 123 4567",
    "380501234567",
    "    +38(050)123-32-34",
    "     0503451234",
    "(050)8889900",
    "38050-111-22-22",
    "38050 111 22 11   ",
]

sanitized_numbers = [normalize_phone(num) for num in raw_numbers]
print("Нормалізовані номери телефонів для SMS-розсилки:", sanitized_numbers)


"""
Альтернативний варіант розвʼязання задачі, без використання if...else, який не виконує всі умови 
(видаляє + з номеру), але візуально є більш лаконічний. 
 """
# def normalize_phone(phone_number: str) -> str:
#     cleaned_num = re.sub(r'[^0-9]', '', phone_number)  # Видаляємо всі нецифрові символи
#     prepared_num = re.sub(r'^38|^8', '', cleaned_num)  # Видаляємо '38' або '8' на початку
#     return '+38' + prepared_num  # Додаємо +38 перед номером
